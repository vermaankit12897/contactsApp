{% extends 'base.html.twig' %}

{% block body %}
<div class="container mt-4">
    <div class="row">
        <!-- Left Sidebar: User Profile -->
        <div class="col-md-3">
            <div class="card p-3 text-center shadow-lg">
                <div class="position-relative d-inline-block">
                    <img src="{{ asset('uploads/profile_pictures/' ~ app.user.profilePicture) }}" class="rounded-circle mb-2" width="80">
                    <!-- Edit Icon -->
                    <a href="{{ path('edit_profile') }}" class="position-absolute top-0 end-0 text-decoration-none">
                        <i class="bi bi-pencil-square fs-5 text-primary"></i>
                    </a>
                </div>
                <h5>{{ app.user.fullName }}</h5>
                <p class="text-muted">{{ app.user.email }}</p>
                <button class="btn btn-outline-primary btn-sm w-100 mt-2">Share Profile</button>
            </div>
        </div>

        <!-- Main Content: Post Section -->
        <div class="col-md-9">
            <!-- Create Post Section -->
            <div class="card p-3 shadow-lg mb-4">
                <h5>Add Post</h5>
                <form id="postForm" enctype="multipart/form-data">
                    <textarea name="description" id="description" class="form-control" placeholder="Write something..." rows="2"></textarea>
                    <div class="d-flex justify-content-between mt-2">
                        <input type="file" name="postImage" id="postImage" class="form-control w-50">
                        <button type="submit" class="btn btn-primary">Post</button>
                    </div>
                </form>
            </div>

            <!-- Post Feed -->
            <div id="postContainer">
                {% for post in posts %}
                    <div class="card mb-3 shadow-lg post-item" id="post-{{ post.id }}">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <span>
                                <img src="{{ asset('uploads/profile_pictures/' ~ post.user.profilePicture) }}" class="rounded-circle" width="30">
                                <strong>{{ post.user.fullName }}</strong>
                            </span>
                            <span class="text-muted small">Posted on {{ post.createdAt|date('d M Y') }}</span>
                        </div>
                        <div class="card-body">
                            <p>{{ post.description }}</p>
                            {% if post.image %}
                                <img src="{{ asset('uploads/posts/' ~ post.image) }}" class="img-fluid rounded">
                            {% endif %}
                        </div>
                        <div class="card-footer d-flex justify-content-between">
                            <button class="btn btn-light like-btn" data-id="{{ post.id }}">
                                üëç Like (<span id="likes-{{ post.id }}">{{ post.getLikesCount() }}</span>)
                            </button>
                            <button class="btn btn-light dislike-btn" data-id="{{ post.id }}">
                                üëé Dislike (<span id="dislikes-{{ post.id }}">{{ post.getDislikesCount() }}</span>)
                            </button>
                            {% if post.user == app.user %}
                                <button class="btn btn-danger btn-sm delete-btn" data-id="{{ post.id }}">üóë Delete</button>
                            {% endif %}
                        </div>
                    </div>
                {% else %}
                    <p class="text-center">No posts available.</p>
                {% endfor %}
            </div>
        </div>
    </div>
</div>

<script>
// Handle Post Submission
document.querySelector('#postForm').addEventListener('submit', function(event) {
    event.preventDefault();
    let formData = new FormData(this);

    fetch('{{ path("post_create") }}', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            let postHtml = `
                <div class="card mb-3 shadow-lg post-item" id="post-${data.id}">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span>
                            <img src="{{ asset('uploads/profile_pictures/') }}${data.profilePicture}" class="rounded-circle" width="30">
                            <strong>${data.fullName}</strong>
                        </span>
                        <span class="text-muted small">Just now</span>
                    </div>
                    <div class="card-body">
                        <p>${data.description}</p>
                        ${data.image ? `<img src="{{ asset('uploads/posts/') }}${data.image}" class="img-fluid rounded">` : ''}
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <button class="btn btn-light like-btn" data-id="${data.id}">üëç Like (<span id="likes-${data.id}">0</span>)</button>
                        <button class="btn btn-light dislike-btn" data-id="${data.id}">üëé Dislike (<span id="dislikes-${data.id}">0</span>)</button>
                        <button class="btn btn-danger btn-sm delete-btn" data-id="${data.id}">üóë Delete</button>
                    </div>
                </div>`;

            document.getElementById('postContainer').insertAdjacentHTML('afterbegin', postHtml);
            document.getElementById('description').value = "";
            document.getElementById('postImage').value = "";
        } else {
            alert('Error uploading post');
        }
    })
    .catch(error => console.error('Error:', error));
});

// Handle Like & Dislike
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('like-btn') || e.target.classList.contains('dislike-btn')) {
        let postId = e.target.getAttribute('data-id');
        let isLike = e.target.classList.contains('like-btn');
        let url = isLike ? '/like/' + postId : '/dislike/' + postId;

        fetch(url, { method: 'POST', headers: { 'X-Requested-With': 'XMLHttpRequest' } })
        .then(response => response.json())
        .then(data => {
            document.getElementById('likes-' + postId).textContent = data.likes;
            document.getElementById('dislikes-' + postId).textContent = data.dislikes;
        })
        .catch(error => console.error('Error:', error));
    }
});

// Handle Post Deletion
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('delete-btn')) {
        let postId = e.target.getAttribute('data-id');

        if (confirm("Are you sure you want to delete this post?")) {
            fetch('/post/delete/' + postId, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('post-' + postId).remove();
                } else {
                    alert("Error deleting post.");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    }
});
</script>
{% endblock %}
